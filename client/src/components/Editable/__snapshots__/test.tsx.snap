// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<EditableContainer> snapshots render buttons correctly when set to all 1`] = `
<div>
  <div
    id="buttonContainer"
  >
    <button
      className="bold"
      onClick={[Function]}
      type="button"
    >
      bold
    </button>
    <button
      className="italic"
      onClick={[Function]}
      type="button"
    >
      italic
    </button>
    <button
      className="underline"
      onClick={[Function]}
      type="button"
    >
      underline
    </button>
    <button
      className="heading"
      onClick={[Function]}
      type="button"
    >
      heading
    </button>
    <button
      className="fontSize"
      onClick={[Function]}
      type="button"
    >
      fontSize
    </button>
    <button
      className="insertOrderedList"
      onClick={[Function]}
      type="button"
    >
      insertOrderedList
    </button>
    <button
      className="insertUnorderedList"
      onClick={[Function]}
      type="button"
    >
      insertUnorderedList
    </button>
    <button
      className="justifyFull"
      onClick={[Function]}
      type="button"
    >
      justifyFull
    </button>
    <button
      className="justifyLeft"
      onClick={[Function]}
      type="button"
    >
      justifyLeft
    </button>
    <button
      className="justifyRight"
      onClick={[Function]}
      type="button"
    >
      justifyRight
    </button>
    <button
      className="justifyCenter"
      onClick={[Function]}
      type="button"
    >
      justifyCenter
    </button>
    <button
      className="strikeThrough"
      onClick={[Function]}
      type="button"
    >
      strikeThrough
    </button>
    <button
      className="subscript"
      onClick={[Function]}
      type="button"
    >
      subscript
    </button>
    <button
      className="superscript"
      onClick={[Function]}
      type="button"
    >
      superscript
    </button>
    <button
      className="insertImage"
      onClick={[Function]}
      type="button"
    >
      insertImage
    </button>
    <button
      className="createLink"
      onClick={[Function]}
      type="button"
    >
      createLink
    </button>
    <button
      className="unlink"
      onClick={[Function]}
      type="button"
    >
      unlink
    </button>
    <button
      className="hideFromPreview"
      onClick={[Function]}
      type="button"
    >
      hideFromPreview
    </button>
    <br />
    <button
      onClick={undefined}
      type="button"
    >
      Submit
    </button>
  </div>
  <p
    contentEditable={true}
  >
    Hi, this is a test
  </p>
</div>
`;

exports[`<EditableContainer> snapshots render buttons correctly when set to basic 1`] = `
<div>
  <div
    id=""
  >
    <button
      className="bold"
      onClick={[Function]}
      type="button"
    >
      bold
    </button>
    <button
      className="italic"
      onClick={[Function]}
      type="button"
    >
      italic
    </button>
    <button
      className="underline"
      onClick={[Function]}
      type="button"
    >
      underline
    </button>
    <button
      className="strikeThrough"
      onClick={[Function]}
      type="button"
    >
      strikeThrough
    </button>
    <button
      className="createLink"
      onClick={[Function]}
      type="button"
    >
      createLink
    </button>
    <br />
    <button
      onClick={undefined}
      type="button"
    >
      Submit
    </button>
  </div>
  <p
    contentEditable={true}
  >
    Hi, this is a test
  </p>
</div>
`;

exports[`<EditableContainer> snapshots render buttons correctly when set to none 1`] = `
<div>
  <p
    contentEditable={true}
  >
    Hi, this is a test
  </p>
</div>
`;

exports[`<EditableContainer> snapshots render correctly when canEdit is set to false 1`] = `
<p>
  Hi, this is a test
</p>
`;

exports[`<EditableContainer> snapshots render correctly when canEdit is set to true 1`] = `
<div>
  <div
    id="buttonContainer"
  >
    <button
      className="bold"
      onClick={[Function]}
      type="button"
    >
      bold
    </button>
    <button
      className="italic"
      onClick={[Function]}
      type="button"
    >
      italic
    </button>
    <button
      className="underline"
      onClick={[Function]}
      type="button"
    >
      underline
    </button>
    <button
      className="heading"
      onClick={[Function]}
      type="button"
    >
      heading
    </button>
    <button
      className="fontSize"
      onClick={[Function]}
      type="button"
    >
      fontSize
    </button>
    <button
      className="insertOrderedList"
      onClick={[Function]}
      type="button"
    >
      insertOrderedList
    </button>
    <button
      className="insertUnorderedList"
      onClick={[Function]}
      type="button"
    >
      insertUnorderedList
    </button>
    <button
      className="justifyFull"
      onClick={[Function]}
      type="button"
    >
      justifyFull
    </button>
    <button
      className="justifyLeft"
      onClick={[Function]}
      type="button"
    >
      justifyLeft
    </button>
    <button
      className="justifyRight"
      onClick={[Function]}
      type="button"
    >
      justifyRight
    </button>
    <button
      className="justifyCenter"
      onClick={[Function]}
      type="button"
    >
      justifyCenter
    </button>
    <button
      className="strikeThrough"
      onClick={[Function]}
      type="button"
    >
      strikeThrough
    </button>
    <button
      className="subscript"
      onClick={[Function]}
      type="button"
    >
      subscript
    </button>
    <button
      className="superscript"
      onClick={[Function]}
      type="button"
    >
      superscript
    </button>
    <button
      className="insertImage"
      onClick={[Function]}
      type="button"
    >
      insertImage
    </button>
    <button
      className="createLink"
      onClick={[Function]}
      type="button"
    >
      createLink
    </button>
    <button
      className="unlink"
      onClick={[Function]}
      type="button"
    >
      unlink
    </button>
    <button
      className="hideFromPreview"
      onClick={[Function]}
      type="button"
    >
      hideFromPreview
    </button>
    <br />
    <button
      onClick={undefined}
      type="button"
    >
      Submit
    </button>
  </div>
  <p
    contentEditable={true}
  >
    Hi, this is a test
  </p>
</div>
`;
